id: AWS - Unclaimed S3 Bucket Validation
version: -1
name: AWS - Unclaimed S3 Bucket Validation
description: 'The playbook sends a HTTP get response to the domain and validates if there is missing bucket information. '
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 9fe2fa19-73dc-4dd8-83f6-15f8b33bf92e
    type: start
    task:
      id: 9fe2fa19-73dc-4dd8-83f6-15f8b33bf92e
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: 8f21d9c1-46ec-4237-84d1-69091e97bac0
    type: regular
    task:
      id: 8f21d9c1-46ec-4237-84d1-69091e97bac0
      version: -1
      name: Get request to the RemoteUrl
      description: Sends http request. Returns the response as json.
      scriptName: http
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      method:
        simple: GET
      url:
        complex:
          root: inputs.RemoteUrl
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: http://
              suffix: {}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 210
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: 5782c2b4-331d-4982-8e3d-1a86262d5c6e
    type: title
    task:
      id: 5782c2b4-331d-4982-8e3d-1a86262d5c6e
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 960
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: 0daabcab-5339-404f-8c6d-fefbefbf34bd
    type: condition
    task:
      id: 0daabcab-5339-404f-8c6d-fefbefbf34bd
      version: -1
      name: Was there a 404 and S3 bucket not found?
      description: Checks where the response was a 404 error and the html body of the response has S3 bucket not found.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "8"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: HttpRequest.Response
                accessor: StatusCode
                transformers:
                - operator: uniq
            iscontext: true
          right:
            value:
              simple: "404"
      - - operator: containsString
          left:
            value:
              complex:
                root: HttpRequest.Response
                accessor: Body
                transformers:
                - operator: uniq
                - operator: toLowerCase
            iscontext: true
          right:
            value:
              simple: nosuchbucket
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: fbb47008-7dab-4171-851a-8d407e3051a1
    type: condition
    task:
      id: fbb47008-7dab-4171-851a-8d407e3051a1
      version: -1
      name: Was there S3 bucket name mentioned?
      description: Checks if there was an S3 bucket mentioned in the http response body.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "9"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: HttpRequest.Response
                accessor: Body
                transformers:
                - operator: RegexExtractAll
                  args:
                    error_if_no_match: {}
                    ignore_case: {}
                    multi_line: {}
                    period_matches_newline: {}
                    regex:
                      value:
                        simple: \<li\>BucketName:\s+(.*?)\<\/li\>
                    unpack_matches: {}
            iscontext: true
          right:
            value: {}
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 590
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "9":
    id: "9"
    taskid: 1f4cc674-da7b-4ce9-8a21-cbd1354e680e
    type: regular
    task:
      id: 1f4cc674-da7b-4ce9-8a21-cbd1354e680e
      version: -1
      name: Set bucket name from HTTP response
      description: Set a bucket name in context under BucketName
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      key:
        simple: S3BucketName
      value:
        complex:
          root: HttpRequest.Response
          accessor: Body
          transformers:
          - operator: RegexExtractAll
            args:
              error_if_no_match: {}
              ignore_case: {}
              multi_line: {}
              period_matches_newline: {}
              regex:
                value:
                  simple: \<li\>BucketName:\s+(.*?)\<\/li\>
              unpack_matches: {}
          - operator: uniq
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 790
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 975,
        "width": 380,
        "x": 450,
        "y": 50
      }
    }
  }
inputs:
- key: RemoteUrl
  value:
    complex:
      root: alert
      accessor: hostname
  required: true
  description: 'Remote IP address in an incident/alert. '
  playbookInputQuery:
outputs:
- contextPath: S3BucketName
  description: This is the bucket name extracted from HTTP response body.
  type: unknown
tests:
- No tests (auto formatted)
fromversion: 6.5.0
